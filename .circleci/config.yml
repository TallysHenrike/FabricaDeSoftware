version: 2.1 # use CircleCI 2.1
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    working_directory: ~/FabricaDeSoftwares # directory where steps will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      # setup testing env
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to DockerHub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
#      - run:
#          name: Decrpyt Secrets
#          command: openssl enc -d -aes-256-ecb -md md5 -in src/main/resources/application.properties.enc -out src/main/resources/application.properties -k $APPLICATION_PROPERTIES_SECRET_KEY

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: FabricaDeSoftwares-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: FabricaDeSoftwares-{{ checksum "pom.xml" }}

      # build and push docker image to docker hub
      - run: mvn clean compile jib:build -Dimage=strund3r/fatesg-eventos:$CIRCLE_BUILD_NUM
      - run: mvn clean compile jib:build -Dimage=strund3r/fatesg-eventos:latest

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/FabricaDeSoftwares
    steps:
      - checkout # check out source code to working directory
      - setup_remote_docker
      - run:
          name: Decrpyt Secrets
          command: openssl enc -d -aes-256-ecb -md md5 -in Jenkins.pem.enc -out Jenkins.pem -k $APPLICATION_PROPERTIES_SECRET_KEY
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy Over SSH
          command: chmod +x deploy.sh && ./deploy.sh

workflows:
  version: 2
  build-test-merge-deploy:
    jobs:
      - build: # build application
          filters:  # using regex filters requires the entire branch to match
            branches:
              only:  # only branches matching the below regex filters will run
                - staging
                - master
#      - test: # run tests
#          requires:
#            - build
#      - merge: # merge staging on master
#          requires:
#            - test
      - deploy: # deploy master branch to the server
          requires:
#            - merge
            - build
          filters:
            branches:
              only:
                - master